# Default values for spire-server.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
namespace: spire
name: spire-server
trustDomain: "domain.test"
clusterName: demo-cluster
tag: spire-server:1.1.1

configmaps:
  notifier:
    bundleName: trust-bundle
  serverConfig:
    socketPath: "/run/spire/sockets/api.sock"
    trustDomain: "domain.test"
    federatesWith: "example.org"
    federatesWithServer: 192.168.0.16:4001
    ttl: "1h"
    notifier:
      configMap: "trust-bundle"
      configMapKey: "root-cert.pem"

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceSpire:
  type: NodePort
  ports:
   - name: api
     port: 8081
     targetPort: 8081
     protocol: TCP

serviceBundleEndpoint:
  name: spire-server-bundle-endpoint
  type: NodePort
  ports:
    - name: api
      port: 8443
      protocol: TCP

serviceControllerWebhook:
  name: spire-controller-manager-webhook-service
  type: NodePort
  ports:
    - port: 443
      protocol: TCP
      targetPort: 9443

#  selector:
#    app: spire-server

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

roles:
  clusterRole:
    name: spire-server-cluster-role
    rules:
      - apiGroups: [""]
        resources: ["nodes"]
        verbs: [ "get" ]
      - apiGroups: [ "authentication.k8s.io" ]
        resources: [ "tokenreviews" ]
        verbs: [ "get", "create" ]
  clusterRoleBinding:
    name: spire-server-cluster-role-binding
    subjects:
      - kind: ServiceAccount
        name: spire-server
        namespace: spire
    roleRef:
      kind: ClusterRole
      name: spire-server-cluster-role
      apiGroup: rbac.authorization.k8s.io
  role:
    name: spire-server-role
    rules:
      - apiGroups: [ "" ]
        resources: [ "pods" ]
        verbs: [ "get" ]
      - apiGroups: [ "" ]
        resources: [ "configmaps" ]
        resourceNames: [ "trust-bundle" ]
        verbs: [ "get", "patch" ]
  roleBinding:
    name: spire-server-role-binding
    subjects:
      - kind: ServiceAccount
        name: spire-server
        namespace: spire
    roleRef:
      kind: Role
      name: spire-server-role
      apiGroup: rbac.authorization.k8s.io